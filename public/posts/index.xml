<?xml version="1.0" encoding="utf-8" standalone="yes"?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom">
  <channel>
    <title>Posts on Jon Schaeffer</title>
    <link>http://localhost:1313/posts/</link>
    <description>Recent content in Posts on Jon Schaeffer</description>
    <generator>Hugo -- gohugo.io</generator>
    <language>en-gb</language>
    <lastBuildDate>Wed, 20 Nov 2024 17:05:55 -0500</lastBuildDate><atom:link href="http://localhost:1313/posts/index.xml" rel="self" type="application/rss+xml" />
    <item>
      <title>Migration from Nginx to Istio: HTTP Rewrites</title>
      <link>http://localhost:1313/posts/nginxtoistiomigrationhttprewrites/</link>
      <pubDate>Wed, 20 Nov 2024 17:05:55 -0500</pubDate>
      
      <guid>http://localhost:1313/posts/nginxtoistiomigrationhttprewrites/</guid>
      
      <description>&lt;p&gt;I am going through the process of migrating from &lt;a href=&#34;https://github.com/kubernetes/ingress-nginx&#34;&gt;NGINX Ingress&lt;/a&gt; to &lt;a href=&#34;https://istio.io/latest/&#34;&gt;Istio&lt;/a&gt; in our development Kubernetes cluster. My organization wants to start taking advantage of service mesh capabilities and progressive deployments with &lt;a href=&#34;https://flagger.app/&#34;&gt;Flagger&lt;/a&gt;.&lt;/p&gt;
&lt;p&gt;We experienced one growing pain that I thought was worth documenting. A developer wrote an update to one of our microservices that introduced a new endpoint accepting a POST request. Testing in our staging environment had the endpoint working as expected. However, in our development environment where Istio is deployed, they were unable to hit the endpoint correctly, receiving a 404 error in Postman. This was unexpected.&lt;/p&gt;</description>
      
    </item>
    
    <item>
      <title>Managing PostgreSQL pg_wal Growth: Troubleshooting and Solutions</title>
      <link>http://localhost:1313/posts/managing-postgresql-pg-wal-growth/</link>
      <pubDate>Wed, 13 Nov 2024 17:33:08 -0500</pubDate>
      
      <guid>http://localhost:1313/posts/managing-postgresql-pg-wal-growth/</guid>
      
      <description>&lt;p&gt;Recently, I&amp;rsquo;ve noticed that my TimescaleDB PostgreSQL clusters have experienced significant growth in their pg_wal volumes, sometimes expanding to over 20GB or even filling up the data disk entirely. This has occasionally led to the data volume running out of space quickly, causing access issues on the database. My goal is to spend less time fixing and worrying about these databases.&lt;/p&gt;
&lt;p&gt;The first step is identifying what causes the pg_wal folder to exceed its expected size (about 2GB). Potential causes include replication lag, incorrect WAL configuration, failed backups, etc.&lt;/p&gt;</description>
      
    </item>
    
    <item>
      <title>Bitbucket to Github Migration Tool (bb2gh)</title>
      <link>http://localhost:1313/posts/bitbucket-to-github/</link>
      <pubDate>Thu, 03 Oct 2024 22:48:27 -0400</pubDate>
      
      <guid>http://localhost:1313/posts/bitbucket-to-github/</guid>
      
      <description>&lt;h1 id=&#34;bitbucket-to-github-migration-tool-bb2gh&#34;&gt;Bitbucket to Github Migration Tool (bb2gh)&lt;/h1&gt;
&lt;p&gt;At work, I have been tasked with migrating our Bitbucket Cloud repositories to Github. Since we are on Bitbucket Cloud, and Github&amp;rsquo;s &lt;a href=&#34;https://docs.github.com/en/migrations/using-github-enterprise-importer&#34;&gt;Enterprise Importer&lt;/a&gt; only supports Bitbucket Server, I wrote up a quick tool to help with the migration.&lt;/p&gt;
&lt;p&gt;Following Github&amp;rsquo;s reccomended &lt;a href=&#34;https://docs.github.com/en/migrations/importing-source-code/using-the-command-line-to-import-source-code/importing-an-external-git-repository-using-the-command-line&#34;&gt;migration process for external Git repositories&lt;/a&gt;, I used the steps they provided to create a script that would automate the process.&lt;/p&gt;
&lt;p&gt;The tool, &lt;a href=&#34;https://github.com/JonSchaeffer/bb2gh&#34;&gt;bb2gh&lt;/a&gt;, is a simple Golang script that will take a list of Bitbucket repositories (notated in a YAML file), clone them to a temp directory, and push them to Github using the Github CLI tool.&lt;/p&gt;</description>
      
    </item>
    
  </channel>
</rss>
